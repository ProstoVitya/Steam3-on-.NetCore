// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Steam3.Services;

#nullable disable

namespace Steam3.Services.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Steam3.Models.Admin", b =>
                {
                    b.Property<string>("Login")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Login");

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("Steam3.Models.AvalibleGame", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("GameName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("UserLogin")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("GameName");

                    b.HasIndex("UserLogin");

                    b.ToTable("AvalibleGames");
                });

            modelBuilder.Entity("Steam3.Models.Client", b =>
                {
                    b.Property<string>("Login")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("CreditCard")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Login");

                    b.HasIndex("CreditCard");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("Steam3.Models.CreditCard", b =>
                {
                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<int>("Money")
                        .HasColumnType("int");

                    b.HasKey("Number");

                    b.ToTable("CreditCards");
                });

            modelBuilder.Entity("Steam3.Models.Game", b =>
                {
                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Cost")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Genre")
                        .HasColumnType("int");

                    b.Property<string>("PhotoPath")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Name");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("Steam3.Models.AvalibleGame", b =>
                {
                    b.HasOne("Steam3.Models.Game", "Game")
                        .WithMany("AvalibleGames")
                        .HasForeignKey("GameName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Steam3.Models.Client", "Client")
                        .WithMany("AvalibleGames")
                        .HasForeignKey("UserLogin")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Game");
                });

            modelBuilder.Entity("Steam3.Models.Client", b =>
                {
                    b.HasOne("Steam3.Models.CreditCard", "CreditCard1")
                        .WithMany("Client")
                        .HasForeignKey("CreditCard")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreditCard1");
                });

            modelBuilder.Entity("Steam3.Models.Client", b =>
                {
                    b.Navigation("AvalibleGames");
                });

            modelBuilder.Entity("Steam3.Models.CreditCard", b =>
                {
                    b.Navigation("Client");
                });

            modelBuilder.Entity("Steam3.Models.Game", b =>
                {
                    b.Navigation("AvalibleGames");
                });
#pragma warning restore 612, 618
        }
    }
}
